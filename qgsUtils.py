# -*- coding: utf-8 -*-
"""
/***************************************************************************
 Utils
                                 A QGIS plugin
 Computes ecological continuities based on environments permeability
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2018-04-12
        git sha              : $Format:%H$
        copyright            : (C) 2018 by IRSTEA
        email                : mathieu.chailloux@irstea.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from qgis.gui import *
from qgis.core import *
from .utils import *

def checkLayersCompatible(l1,l2):
    crs1 = l1.crs().authid()
    crs2 = l2.crs().authid()
    geomType1 = l1.geometryType()
    geomType2 = l1.geometryType()
    return (crs1 == crs2 and geomType1 == geomType2)

def createLayerFromExisting(inLayer,outName):
    crs=str(inLayer.crs().authid())
    geomType=str(inLayer.geometryType())
    outLayer=QgsVectorLayer(geomType + '?crs='+crs, outName, "memory")
    return outLayer

def writeShapefile(layer,outfname):
    crs = QgsCoordinateReferenceSystem("EPSG:2154")
    #params = 
    (error, error_msg) = QgsVectorFileWriter.writeAsVectorFormat(layer,outfname,'utf-8',destCRS=crs,driverName='ESRI Shapefile')
    if error == QgsVectorFileWriter.NoError:
        info("Shapefile '" + outfname + "' succesfully created")
    else:
        user_error("Unable to create shapefile '" + outfname + "' : " + str(error_msg))